basePath: /api
definitions:
  controllers.CallFeedbackRequest:
    properties:
      comment:
        description: 可选评论
        example: 通话质量良好，声音清晰
        type: string
      issues:
        description: 问题描述
        example: 偶尔有一点延迟
        type: string
      rating:
        description: 1-5 星评分
        example: 4
        maximum: 5
        minimum: 1
        type: integer
    required:
    - rating
    type: object
  controllers.CallRequest:
    properties:
      device_id:
        type: string
      resident_id:
        type: string
    required:
    - device_id
    - resident_id
    type: object
  controllers.CreateAdminRequest:
    properties:
      email:
        example: admin@ilock.com
        type: string
      password:
        example: admin123
        type: string
      username:
        example: admin1
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.CreateStaffRequest:
    type: object
  controllers.DeviceRequest:
    type: object
  controllers.EmergencyAlarmRequest:
    properties:
      description:
        example: 火灾警报被触发，疑似厨房起火
        type: string
      location:
        example: Building A, Floor 3
        type: string
      property_id:
        description: 物业ID
        example: 1
        type: integer
      reported_by:
        description: 报告人ID
        example: 1
        type: integer
      type:
        description: 如：fire(火灾)、intrusion(入侵)、medical(医疗)等
        example: fire
        type: string
    required:
    - location
    - property_id
    - type
    type: object
  controllers.EmergencyNotificationRequest:
    properties:
      content:
        example: A栋3楼发生火灾，请所有居民立即疏散。
        type: string
      expires_at:
        description: 可选，不提供则默认24小时
        example: "2023-07-01T15:00:00Z"
        type: string
      is_public:
        description: 是否为公开通知
        example: false
        type: boolean
      property_id:
        description: 关联的物业ID，可以为空表示全局通知
        example: 1
        type: integer
      severity:
        description: high, medium, low
        example: high
        type: string
      target_type:
        description: all, residents, staff
        example: all
        type: string
      title:
        example: 紧急通知：小区火灾警报
        type: string
    required:
    - content
    - severity
    - title
    type: object
  controllers.EmergencyUnlockRequest:
    properties:
      reason:
        example: 火灾疏散
        type: string
    required:
    - reason
    type: object
  controllers.ErrorResponse:
    properties:
      code:
        example: 401
        type: integer
      data: {}
      message:
        example: Invalid username or password
        type: string
    type: object
  controllers.LoginData:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      role:
        example: admin
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user_id:
        example: 1
        type: integer
      username:
        example: admin
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      password:
        example: admin123
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  controllers.LoginResponse:
    properties:
      code:
        example: 0
        type: integer
      data: {}
      message:
        example: Login successful
        type: string
    type: object
  controllers.ResidentRequest:
    properties:
      device_id:
        example: 101
        type: integer
      email:
        example: zhangsan@resident.com
        type: string
      name:
        example: 张三
        type: string
      phone:
        example: "13812345678"
        type: string
    required:
    - device_id
    - name
    - phone
    type: object
  controllers.TokenRequest:
    properties:
      channel_id:
        example: room123
        type: string
      user_id:
        example: user456
        type: string
    required:
    - channel_id
    - user_id
    type: object
  controllers.UpdateAdminRequest:
    properties:
      email:
        example: admin@ilock.com
        type: string
      password:
        example: NewPassword@123
        type: string
      username:
        example: admin_updated
        type: string
    type: object
  controllers.UpdateResidentRequest:
    properties:
      device_id:
        example: 102
        type: integer
      email:
        example: lisi@resident.com
        type: string
      name:
        example: 李四
        type: string
      phone:
        example: "13987654321"
        type: string
    type: object
  controllers.UpdateStaffRequest:
    type: object
  models.AccessLog:
    properties:
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        type: integer
      id:
        type: integer
      method:
        $ref: '#/definitions/models.AccessMethod'
      resident:
        $ref: '#/definitions/models.Resident'
      resident_id:
        type: integer
      result:
        $ref: '#/definitions/models.AccessResult'
      timestamp:
        type: string
    type: object
  models.AccessMethod:
    enum:
    - remote
    - code
    - face
    - fingerprint
    type: string
    x-enum-varnames:
    - AccessMethodRemote
    - AccessMethodCode
    - AccessMethodFace
    - AccessMethodFingerprint
  models.AccessResult:
    enum:
    - success
    - failure
    type: string
    x-enum-varnames:
    - AccessResultSuccess
    - AccessResultFailure
  models.CallRecord:
    properties:
      call_status:
        $ref: '#/definitions/models.CallStatus'
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        type: integer
      duration:
        description: in seconds
        type: integer
      id:
        type: integer
      resident:
        $ref: '#/definitions/models.Resident'
      resident_id:
        type: integer
      timestamp:
        type: string
    type: object
  models.CallStatus:
    enum:
    - answered
    - missed
    - timeout
    type: string
    x-enum-varnames:
    - CallStatusAnswered
    - CallStatusMissed
    - CallStatusTimeout
  models.Device:
    properties:
      access_logs:
        items:
          $ref: '#/definitions/models.AccessLog'
        type: array
      call_records:
        items:
          $ref: '#/definitions/models.CallRecord'
        type: array
      created_at:
        type: string
      emergency_logs:
        items:
          $ref: '#/definitions/models.EmergencyLog'
        type: array
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      resident:
        $ref: '#/definitions/models.Resident'
      serial_number:
        type: string
      staff:
        description: Relations - 多对多关系
        items:
          $ref: '#/definitions/models.PropertyStaff'
        type: array
      status:
        $ref: '#/definitions/models.DeviceStatus'
      updated_at:
        type: string
      weather:
        $ref: '#/definitions/models.Weather'
    type: object
  models.DeviceStatus:
    enum:
    - online
    - offline
    - fault
    type: string
    x-enum-varnames:
    - DeviceStatusOnline
    - DeviceStatusOffline
    - DeviceStatusFault
  models.EmergencyLog:
    properties:
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        type: integer
      id:
        type: integer
      resident:
        $ref: '#/definitions/models.Resident'
      resident_id:
        type: integer
      resolved_at:
        description: 可空字段
        type: string
      status:
        $ref: '#/definitions/models.EmergencyStatus'
      triggered_at:
        type: string
    type: object
  models.EmergencyStatus:
    enum:
    - pending
    - responded
    - escalated
    - resolved
    type: string
    x-enum-varnames:
    - EmergencyStatusPending
    - EmergencyStatusResponded
    - EmergencyStatusEscalated
    - EmergencyStatusResolved
  models.PropertyStaff:
    properties:
      created_at:
        type: string
      devices:
        description: 关联关系 - 使用多对多关系替代直接关联
        items:
          $ref: '#/definitions/models.Device'
        type: array
      id:
        type: integer
      phone:
        type: string
      position:
        type: string
      property_name:
        type: string
      remark:
        type: string
      role:
        description: manager, staff, etc.
        type: string
      status:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.Resident:
    properties:
      access_logs:
        items:
          $ref: '#/definitions/models.AccessLog'
        type: array
      call_records:
        items:
          $ref: '#/definitions/models.CallRecord'
        type: array
      created_at:
        type: string
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        description: One-to-one relationship with Device
        type: integer
      email:
        type: string
      emergency_logs:
        items:
          $ref: '#/definitions/models.EmergencyLog'
        type: array
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  models.Weather:
    properties:
      device:
        allOf:
        - $ref: '#/definitions/models.Device'
        description: Relations
      device_id:
        description: One-to-one with device
        type: integer
      humidity:
        type: number
      id:
        type: integer
      temperature:
        type: number
      updated_at:
        type: string
      warning:
        description: Weather warnings
        type: string
      weather:
        description: Sunny, cloudy, rain, etc.
        type: string
      wind:
        description: Wind description
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@yourcompany.com
    name: API Support
    url: http://www.yourcompany.com/support
  description: A comprehensive door access management system with video calling capabilities
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ILock HTTP Service API
  version: "1.0"
paths:
  /admins:
    get:
      consumes:
      - application/json
      description: Get a list of all administrators in the system, with pagination
        support
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Admin List
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create a new system administrator account and return the created
        administrator info
      parameters:
      - description: Administrator information - username, password and email are
          required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateAdminRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success response with created admin details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request or username already exists
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Administrator
      tags:
      - Admin
  /admins/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an administrator with the specified ID
      parameters:
      - description: Administrator ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Administrator
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Get details of a specific administrator by ID
      parameters:
      - description: Administrator ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Admin By ID
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update details of an administrator with the specified ID
      parameters:
      - description: Administrator ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated administrator information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateAdminRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Administrator
      tags:
      - Admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Process user login and return JWT token with different permissions
        based on user role
      parameters:
      - description: Login request parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response with token
          schema:
            allOf:
            - $ref: '#/definitions/controllers.LoginResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.LoginData'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: User Login
      tags:
      - Auth
  /calls:
    get:
      consumes:
      - application/json
      description: Get a list of all call records in the system, with pagination
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get Call Records
      tags:
      - CallRecord
  /calls/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a specific call record by ID
      parameters:
      - description: Call Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get Call Record By ID
      tags:
      - CallRecord
  /calls/{id}/feedback:
    post:
      consumes:
      - application/json
      description: Submit quality feedback for a specific call record
      parameters:
      - description: Call Record ID
        in: path
        name: id
        required: true
        type: integer
      - description: Feedback information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CallFeedbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Submit Call Feedback
      tags:
      - CallRecord
  /calls/device/{deviceId}:
    get:
      consumes:
      - application/json
      description: Get call records for a specific device, with pagination
      parameters:
      - description: Device ID
        in: path
        name: deviceId
        required: true
        type: integer
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get Device Call Records
      tags:
      - CallRecord
  /calls/resident/{residentId}:
    get:
      consumes:
      - application/json
      description: Get call records for a specific resident, with pagination
      parameters:
      - description: Resident ID
        in: path
        name: residentId
        required: true
        type: integer
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get Resident Call Records
      tags:
      - CallRecord
  /calls/statistics:
    get:
      consumes:
      - application/json
      description: Get call statistics including total, answered, missed, etc.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get Call Statistics
      tags:
      - CallRecord
  /devices:
    get:
      consumes:
      - application/json
      description: 获取所有设备的列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Device'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取所有设备
      tags:
      - device
    post:
      consumes:
      - application/json
      description: 创建一个新的门禁设备
      parameters:
      - description: 设备信息
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/controllers.DeviceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 创建新设备
      tags:
      - device
  /devices/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除设备
      parameters:
      - description: 设备ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除设备
      tags:
      - device
    get:
      consumes:
      - application/json
      description: 根据ID获取设备信息
      parameters:
      - description: 设备ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取单个设备
      tags:
      - device
    put:
      consumes:
      - application/json
      description: 根据ID更新设备信息
      parameters:
      - description: 设备ID
        in: path
        name: id
        required: true
        type: string
      - description: 设备信息
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/controllers.DeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新设备信息
      tags:
      - device
  /devices/{id}/status:
    get:
      consumes:
      - application/json
      description: Get the current status of a device by ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Device Status
      tags:
      - device
  /emergency/alarm:
    post:
      consumes:
      - application/json
      description: 触发紧急警报并通知相关人员
      parameters:
      - description: 警报请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EmergencyAlarmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 触发紧急警报
      tags:
      - Emergency
  /emergency/contacts:
    get:
      consumes:
      - application/json
      description: 获取系统中所有紧急联系人的列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 获取紧急联系人列表
      tags:
      - Emergency
  /emergency/notify-all:
    post:
      consumes:
      - application/json
      description: 向系统中的所有用户发送紧急通知
      parameters:
      - description: 通知请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EmergencyNotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 发送紧急通知
      tags:
      - Emergency
  /emergency/unlock-all:
    post:
      consumes:
      - application/json
      description: 在紧急情况下解锁系统中所有门锁
      parameters:
      - description: 解锁请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.EmergencyUnlockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 紧急解锁所有门
      tags:
      - Emergency
  /residents:
    get:
      consumes:
      - application/json
      description: Get a list of all residents in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Resident List
      tags:
      - Resident
    post:
      consumes:
      - application/json
      description: Create a new resident account, requiring association with a specific
        device
      parameters:
      - description: Resident information - name, phone and device ID are required,
          email is optional
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ResidentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success response with created resident details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request, device not found or phone number already in use
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Resident
      tags:
      - Resident
  /residents/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a resident with the specified ID
      parameters:
      - description: Resident ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Resident
      tags:
      - Resident
    get:
      consumes:
      - application/json
      description: Get details of a specific resident by ID
      parameters:
      - description: Resident ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Resident By ID
      tags:
      - Resident
    put:
      consumes:
      - application/json
      description: Update details of a resident with the specified ID
      parameters:
      - description: Resident ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated resident information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateResidentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Resident
      tags:
      - Resident
  /rtc/call:
    post:
      consumes:
      - application/json
      description: 在设备和居民之间发起视频通话
      parameters:
      - description: 通话请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 发起视频通话
      tags:
      - RTC
  /rtc/token:
    post:
      consumes:
      - application/json
      description: 获取用于进行实时通信的RTC令牌
      parameters:
      - description: 令牌请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 获取RTC令牌
      tags:
      - RTC
  /staffs:
    get:
      consumes:
      - application/json
      description: Get a list of all property staff members, with pagination and search
        support
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Items per page, default is 10
        in: query
        name: page_size
        type: integer
      - description: Search keyword for name, phone, etc.
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Property Staff List
      tags:
      - Staff
    post:
      consumes:
      - application/json
      description: Create a new property staff account, with specified role, position
        and property
      parameters:
      - description: Property staff information - including name, phone, username,
          password, property ID and role
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateStaffRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success response with created staff details
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request, phone or username already in use
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Property Staff
      tags:
      - Staff
  /staffs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a property staff member with the specified ID
      parameters:
      - description: Property Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Property Staff
      tags:
      - Staff
    get:
      consumes:
      - application/json
      description: Get details of a specific property staff member by ID
      parameters:
      - description: Property Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Property Staff By ID
      tags:
      - Staff
    put:
      consumes:
      - application/json
      description: Update details of a property staff member with the specified ID
      parameters:
      - description: Property Staff ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated property staff information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateStaffRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Property Staff
      tags:
      - Staff
securityDefinitions:
  BearerAuth:
    description: 'Enter the token with the `Bearer: ` prefix'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
