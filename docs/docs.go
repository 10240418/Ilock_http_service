// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.yourcompany.com/support",
            "email": "support@yourcompany.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admins": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all administrators in the system, with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Admin List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page, default is 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new system administrator account and return the created administrator info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create Administrator",
                "parameters": [
                    {
                        "description": "Administrator information - username, password and email are required",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success response with created admin details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request or username already exists",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a specific administrator by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Admin By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Administrator ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an administrator with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Administrator",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Administrator ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated administrator information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an administrator with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Administrator",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Administrator ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Process user login and return JWT token with different permissions based on user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login request parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with token",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.LoginResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/controllers.LoginData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/calls": {
            "get": {
                "description": "Get a list of all call records in the system, with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CallRecord"
                ],
                "summary": "Get Call Records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page, default is 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/calls/device/{deviceId}": {
            "get": {
                "description": "Get call records for a specific device, with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CallRecord"
                ],
                "summary": "Get Device Call Records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "deviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page, default is 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/calls/resident/{residentId}": {
            "get": {
                "description": "Get call records for a specific resident, with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CallRecord"
                ],
                "summary": "Get Resident Call Records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resident ID",
                        "name": "residentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page, default is 10",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/calls/statistics": {
            "get": {
                "description": "Get call statistics including total, answered, missed, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CallRecord"
                ],
                "summary": "Get Call Statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/calls/{id}": {
            "get": {
                "description": "Get details of a specific call record by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CallRecord"
                ],
                "summary": "Get Call Record By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Call Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/calls/{id}/feedback": {
            "post": {
                "description": "Submit quality feedback for a specific call record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CallRecord"
                ],
                "summary": "Submit Call Feedback",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Call Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CallFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取所有设备的列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "获取所有设备",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建一个新的门禁设备",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "创建新设备",
                "parameters": [
                    {
                        "description": "设备信息",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.DeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/devices/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "根据ID获取设备信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "获取单个设备",
                "parameters": [
                    {
                        "type": "string",
                        "description": "设备ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "根据ID更新设备信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "更新设备信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "设备ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "设备信息",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.DeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "根据ID删除设备",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "删除设备",
                "parameters": [
                    {
                        "type": "string",
                        "description": "设备ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/devices/{id}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current status of a device by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device"
                ],
                "summary": "Get Device Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/emergency/alarm": {
            "post": {
                "description": "触发紧急警报并通知相关人员",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emergency"
                ],
                "summary": "触发紧急警报",
                "parameters": [
                    {
                        "description": "警报请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.EmergencyAlarmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/emergency/contacts": {
            "get": {
                "description": "获取系统中所有紧急联系人的列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emergency"
                ],
                "summary": "获取紧急联系人列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/emergency/notify-all": {
            "post": {
                "description": "向系统中的所有用户发送紧急通知",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emergency"
                ],
                "summary": "发送紧急通知",
                "parameters": [
                    {
                        "description": "通知请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.EmergencyNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/emergency/unlock-all": {
            "post": {
                "description": "在紧急情况下解锁系统中所有门锁",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Emergency"
                ],
                "summary": "紧急解锁所有门",
                "parameters": [
                    {
                        "description": "解锁请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.EmergencyUnlockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/residents": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all residents in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resident"
                ],
                "summary": "Get Resident List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new resident account, requiring association with a specific device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resident"
                ],
                "summary": "Create Resident",
                "parameters": [
                    {
                        "description": "Resident information - name, phone and device ID are required, email is optional",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ResidentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success response with created resident details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request, device not found or phone number already in use",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/residents/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a specific resident by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resident"
                ],
                "summary": "Get Resident By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a resident with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resident"
                ],
                "summary": "Update Resident",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated resident information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateResidentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a resident with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resident"
                ],
                "summary": "Delete Resident",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resident ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rtc/call": {
            "post": {
                "description": "在设备和居民之间发起视频通话",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RTC"
                ],
                "summary": "发起视频通话",
                "parameters": [
                    {
                        "description": "通话请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rtc/token": {
            "post": {
                "description": "获取用于进行实时通信的RTC令牌",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RTC"
                ],
                "summary": "获取RTC令牌",
                "parameters": [
                    {
                        "description": "令牌请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/staffs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all property staff members, with pagination and search support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get Property Staff List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page, default is 10",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword for name, phone, etc.",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new property staff account, with specified role, position and property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Create Property Staff",
                "parameters": [
                    {
                        "description": "Property staff information - including name, phone, username, password, property ID and role",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success response with created staff details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request, phone or username already in use",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/staffs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a specific property staff member by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Get Property Staff By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Property Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a property staff member with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Update Property Staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Property Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated property staff information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateStaffRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a property staff member with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staff"
                ],
                "summary": "Delete Property Staff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Property Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CallFeedbackRequest": {
            "type": "object",
            "required": [
                "rating"
            ],
            "properties": {
                "comment": {
                    "description": "可选评论",
                    "type": "string",
                    "example": "通话质量良好，声音清晰"
                },
                "issues": {
                    "description": "问题描述",
                    "type": "string",
                    "example": "偶尔有一点延迟"
                },
                "rating": {
                    "description": "1-5 星评分",
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1,
                    "example": 4
                }
            }
        },
        "controllers.CallRequest": {
            "type": "object",
            "required": [
                "device_id",
                "resident_id"
            ],
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "resident_id": {
                    "type": "string"
                }
            }
        },
        "controllers.CreateAdminRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@ilock.com"
                },
                "password": {
                    "type": "string",
                    "example": "admin123"
                },
                "username": {
                    "type": "string",
                    "example": "admin1"
                }
            }
        },
        "controllers.CreateStaffRequest": {
            "type": "object"
        },
        "controllers.DeviceRequest": {
            "type": "object"
        },
        "controllers.EmergencyAlarmRequest": {
            "type": "object",
            "required": [
                "location",
                "property_id",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "火灾警报被触发，疑似厨房起火"
                },
                "location": {
                    "type": "string",
                    "example": "Building A, Floor 3"
                },
                "property_id": {
                    "description": "物业ID",
                    "type": "integer",
                    "example": 1
                },
                "reported_by": {
                    "description": "报告人ID",
                    "type": "integer",
                    "example": 1
                },
                "type": {
                    "description": "如：fire(火灾)、intrusion(入侵)、medical(医疗)等",
                    "type": "string",
                    "example": "fire"
                }
            }
        },
        "controllers.EmergencyNotificationRequest": {
            "type": "object",
            "required": [
                "content",
                "severity",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "A栋3楼发生火灾，请所有居民立即疏散。"
                },
                "expires_at": {
                    "description": "可选，不提供则默认24小时",
                    "type": "string",
                    "example": "2023-07-01T15:00:00Z"
                },
                "is_public": {
                    "description": "是否为公开通知",
                    "type": "boolean",
                    "example": false
                },
                "property_id": {
                    "description": "关联的物业ID，可以为空表示全局通知",
                    "type": "integer",
                    "example": 1
                },
                "severity": {
                    "description": "high, medium, low",
                    "type": "string",
                    "example": "high"
                },
                "target_type": {
                    "description": "all, residents, staff",
                    "type": "string",
                    "example": "all"
                },
                "title": {
                    "type": "string",
                    "example": "紧急通知：小区火灾警报"
                }
            }
        },
        "controllers.EmergencyUnlockRequest": {
            "type": "object",
            "required": [
                "reason"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "火灾疏散"
                }
            }
        },
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Invalid username or password"
                }
            }
        },
        "controllers.LoginData": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "admin123"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "controllers.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Login successful"
                }
            }
        },
        "controllers.ResidentRequest": {
            "type": "object",
            "required": [
                "device_id",
                "name",
                "phone"
            ],
            "properties": {
                "device_id": {
                    "type": "integer",
                    "example": 101
                },
                "email": {
                    "type": "string",
                    "example": "zhangsan@resident.com"
                },
                "name": {
                    "type": "string",
                    "example": "张三"
                },
                "phone": {
                    "type": "string",
                    "example": "13812345678"
                }
            }
        },
        "controllers.TokenRequest": {
            "type": "object",
            "required": [
                "channel_id",
                "user_id"
            ],
            "properties": {
                "channel_id": {
                    "type": "string",
                    "example": "room123"
                },
                "user_id": {
                    "type": "string",
                    "example": "user456"
                }
            }
        },
        "controllers.UpdateAdminRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@ilock.com"
                },
                "password": {
                    "type": "string",
                    "example": "NewPassword@123"
                },
                "username": {
                    "type": "string",
                    "example": "admin_updated"
                }
            }
        },
        "controllers.UpdateResidentRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "integer",
                    "example": 102
                },
                "email": {
                    "type": "string",
                    "example": "lisi@resident.com"
                },
                "name": {
                    "type": "string",
                    "example": "李四"
                },
                "phone": {
                    "type": "string",
                    "example": "13987654321"
                }
            }
        },
        "controllers.UpdateStaffRequest": {
            "type": "object"
        },
        "models.AccessLog": {
            "type": "object",
            "properties": {
                "device": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Device"
                        }
                    ]
                },
                "device_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "$ref": "#/definitions/models.AccessMethod"
                },
                "resident": {
                    "$ref": "#/definitions/models.Resident"
                },
                "resident_id": {
                    "type": "integer"
                },
                "result": {
                    "$ref": "#/definitions/models.AccessResult"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.AccessMethod": {
            "type": "string",
            "enum": [
                "remote",
                "code",
                "face",
                "fingerprint"
            ],
            "x-enum-varnames": [
                "AccessMethodRemote",
                "AccessMethodCode",
                "AccessMethodFace",
                "AccessMethodFingerprint"
            ]
        },
        "models.AccessResult": {
            "type": "string",
            "enum": [
                "success",
                "failure"
            ],
            "x-enum-varnames": [
                "AccessResultSuccess",
                "AccessResultFailure"
            ]
        },
        "models.CallRecord": {
            "type": "object",
            "properties": {
                "call_status": {
                    "$ref": "#/definitions/models.CallStatus"
                },
                "device": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Device"
                        }
                    ]
                },
                "device_id": {
                    "type": "integer"
                },
                "duration": {
                    "description": "in seconds",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "resident": {
                    "$ref": "#/definitions/models.Resident"
                },
                "resident_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.CallStatus": {
            "type": "string",
            "enum": [
                "answered",
                "missed",
                "timeout"
            ],
            "x-enum-varnames": [
                "CallStatusAnswered",
                "CallStatusMissed",
                "CallStatusTimeout"
            ]
        },
        "models.Device": {
            "type": "object",
            "properties": {
                "access_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AccessLog"
                    }
                },
                "call_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CallRecord"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "emergency_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EmergencyLog"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resident": {
                    "$ref": "#/definitions/models.Resident"
                },
                "serial_number": {
                    "type": "string"
                },
                "staff": {
                    "description": "Relations - 多对多关系",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PropertyStaff"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.DeviceStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "weather": {
                    "$ref": "#/definitions/models.Weather"
                }
            }
        },
        "models.DeviceStatus": {
            "type": "string",
            "enum": [
                "online",
                "offline",
                "fault"
            ],
            "x-enum-varnames": [
                "DeviceStatusOnline",
                "DeviceStatusOffline",
                "DeviceStatusFault"
            ]
        },
        "models.EmergencyLog": {
            "type": "object",
            "properties": {
                "device": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Device"
                        }
                    ]
                },
                "device_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "resident": {
                    "$ref": "#/definitions/models.Resident"
                },
                "resident_id": {
                    "type": "integer"
                },
                "resolved_at": {
                    "description": "可空字段",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.EmergencyStatus"
                },
                "triggered_at": {
                    "type": "string"
                }
            }
        },
        "models.EmergencyStatus": {
            "type": "string",
            "enum": [
                "pending",
                "responded",
                "escalated",
                "resolved"
            ],
            "x-enum-varnames": [
                "EmergencyStatusPending",
                "EmergencyStatusResponded",
                "EmergencyStatusEscalated",
                "EmergencyStatusResolved"
            ]
        },
        "models.PropertyStaff": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "devices": {
                    "description": "关联关系 - 使用多对多关系替代直接关联",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Device"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "property_name": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "role": {
                    "description": "manager, staff, etc.",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Resident": {
            "type": "object",
            "properties": {
                "access_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AccessLog"
                    }
                },
                "call_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CallRecord"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "device": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Device"
                        }
                    ]
                },
                "device_id": {
                    "description": "One-to-one relationship with Device",
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "emergency_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EmergencyLog"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Weather": {
            "type": "object",
            "properties": {
                "device": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Device"
                        }
                    ]
                },
                "device_id": {
                    "description": "One-to-one with device",
                    "type": "integer"
                },
                "humidity": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "temperature": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "warning": {
                    "description": "Weather warnings",
                    "type": "string"
                },
                "weather": {
                    "description": "Sunny, cloudy, rain, etc.",
                    "type": "string"
                },
                "wind": {
                    "description": "Wind description",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter the token with the ` + "`" + `Bearer: ` + "`" + ` prefix",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "ILock HTTP Service API",
	Description:      "A comprehensive door access management system with video calling capabilities",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
